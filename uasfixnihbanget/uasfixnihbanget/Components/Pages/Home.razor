@page "/"

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject Apiservices Apiservices
@using uasfixnihbanget.Models


<h3>Login</h3>

<EditForm FormName="Name" Model="@newLogin" OnValidSubmit="@HandleValidSubmit">
    <div class="form-group">
        <label for="email">Email</label>
        <input id="email" class="form-control" type="text" @bind="@newLogin.userName" required />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <input id="password" class="form-control" type="password" @bind="@newLogin.password" required />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Login</button>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(token))
{
    <div class="alert alert-success mt-3">
        <strong>Login successful!</strong> Your token: @token
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">
        <strong>Error:</strong> @errorMessage
    </div>
}

@code {
    private Login newLogin = new(); 
    private string token; 
    private string errorMessage; 

    private async Task HandleValidSubmit()
    {
        try
        {
            token = await Apiservices.LoginAsync(newLogin);

        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}